import { Request, Response } from "express";
import Meeting from "../models/Meeting";
import Log from "../models/Log";
import transporter from "../config/mailer";
import { sendMailToParticipants } from "../utils/mailHelper";


// âœ… ToplantÄ± oluÅŸtur
export const createMeeting = async (req: Request, res: Response) => {
  try {
    const { title, description, startDate, endDate, participants } = req.body;
    const document = req.file ? req.file.filename : undefined;

    const meeting = await Meeting.create({
      title,
      description,
      startDate,
      endDate,
      document,
      status: "active",
      participants, // ğŸ‘ˆ email listesi (virgÃ¼llerle ayrÄ±lmÄ±ÅŸ string)
    });

    // ğŸ“§ KatÄ±lÄ±mcÄ±lara mail gÃ¶nder
    await sendMailToParticipants(
      participants,
      `Yeni ToplantÄ±: ${title}`,
      `
        <h3>Yeni ToplantÄ±</h3>
        <p><b>BaÅŸlangÄ±Ã§:</b> ${startDate}</p>
        <p><b>BitiÅŸ:</b> ${endDate}</p>
        <p><b>AÃ§Ä±klama:</b> ${description || "Yok"}</p>
      `
    );

    res.status(201).json(meeting);
  } catch (err) {
    res.status(500).json({ message: "ToplantÄ± oluÅŸturulamadÄ±", error: err });
  }
};

// âœ… TÃ¼m toplantÄ±larÄ± listele
export const getMeetings = async (req: Request, res: Response) => {
  try {
    const meetings = await Meeting.findAll();
    res.json(meetings);
  } catch (err) {
    res.status(500).json({ message: "ToplantÄ±lar getirilemedi", error: err });
  }
};

// âœ… Tek toplantÄ± getir
export const getMeeting = async (req: Request, res: Response) => {
  try {
    const meeting = await Meeting.findByPk(req.params.id);
    if (!meeting) return res.status(404).json({ message: "ToplantÄ± bulunamadÄ±" });
    res.json(meeting);
  } catch (err) {
    res.status(500).json({ message: "ToplantÄ± getirilemedi", error: err });
  }
};

// âœ… GÃ¼ncelle
export const updateMeeting = async (req: Request, res: Response) => {
  try {
    const meeting = await Meeting.findByPk(req.params.id);
    if (!meeting) return res.status(404).json({ message: "ToplantÄ± bulunamadÄ±" });

    const { title, description, startDate, endDate, status } = req.body;
    if (req.file) meeting.document = req.file.filename;

    meeting.title = title || meeting.title;
    meeting.description = description || meeting.description;
    meeting.startDate = startDate || meeting.startDate;
    meeting.endDate = endDate || meeting.endDate;
    meeting.status = status || meeting.status;

    await meeting.save();
    res.json(meeting);
  } catch (err) {
    res.status(500).json({ message: "ToplantÄ± gÃ¼ncellenemedi", error: err });
  }
};

// âœ… Sil (tamamen kaldÄ±r + mail gÃ¶nder + log)
export const deleteMeeting = async (req: Request, res: Response) => {
  try {
    const meeting = await Meeting.findByPk(req.params.id);
    if (!meeting) return res.status(404).json({ message: "ToplantÄ± bulunamadÄ±" });

    const { title, startDate, endDate, description, participants } = meeting;

    await meeting.destroy();

    // ğŸ“§ KatÄ±lÄ±mcÄ±lara mail gÃ¶nder
    await sendMailToParticipants(
      participants,
      `ToplantÄ± Silindi: ${title}`,
      `
        <h3>ToplantÄ± Silindi</h3>
        <p><b>BaÅŸlangÄ±Ã§:</b> ${startDate}</p>
        <p><b>BitiÅŸ:</b> ${endDate}</p>
        <p><b>AÃ§Ä±klama:</b> ${description || "Yok"}</p>
      `
    );

    res.json({ message: "ToplantÄ± silindi ve katÄ±lÄ±mcÄ±lara mail gÃ¶nderildi" });
  } catch (err) {
    res.status(500).json({ message: "ToplantÄ± silinemedi", error: err });
  }
};

// âœ… Ä°ptal et (status = cancelled)
export const cancelMeeting = async (req: Request, res: Response) => {
  try {
    const meeting = await Meeting.findByPk(req.params.id);
    if (!meeting) return res.status(404).json({ message: "ToplantÄ± bulunamadÄ±" });

    meeting.status = "cancelled";
    await meeting.save();

    // ğŸ“§ KatÄ±lÄ±mcÄ±lara mail gÃ¶nder
    await sendMailToParticipants(
      meeting.participants,
      `ToplantÄ± Ä°ptal Edildi: ${meeting.title}`,
      `
        <h3>ToplantÄ± Ä°ptal Edildi</h3>
        <p><b>BaÅŸlangÄ±Ã§:</b> ${meeting.startDate}</p>
        <p><b>BitiÅŸ:</b> ${meeting.endDate}</p>
        <p><b>AÃ§Ä±klama:</b> ${meeting.description || "Yok"}</p>
      `
    );

    res.json({ message: "ToplantÄ± iptal edildi ve katÄ±lÄ±mcÄ±lara mail gÃ¶nderildi", meeting });
  } catch (err) {
    res.status(500).json({ message: "ToplantÄ± iptal edilemedi", error: err });
  }
};